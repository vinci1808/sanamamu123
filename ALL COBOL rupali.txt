 IDENTIFICATION DIVISION.                      
 PROGRAM-ID. MONTH.   
 DATA DIVISION.
 WORKING-STORAGE SECTION.
 01  WS-TEMP-TABLE      PIC X(21) VALUE 
                         '102235364332123456241'.
 01  FILLER REDEFINES WS-MONTH-TABLE.                       
     03  WS-TEMP        PIC 9(02)V9 OCCURS 7 TIMES.
 01  COUNTER            PIC 9(01) VALUE 1.    
 01  TOTAL-TEMP         PIC 9(03)V9 VALUE ZERO.
 01  AVG-TEMP           PIC 9(02)V9 VALUE ZERO.
 01  TT                 PIC 9(03).9 VALUE ZERO.
 01  AVG                PIC 9(02).9 VALUE ZERO. 
 PROCEDURE DIVISION.
     PERFORM UNTIL COUNTER > 7 
         ADD WS-TEMP(COUNTER) TO TOTAL-TEMP
         ADD 1 TO COUNTER
     END-PERFORM.
     COMPUTE AVG-TEMP = TOTAL-TEMP / 7 
     MOVE AVG-TEMP TO AVG
     MOVE TOTAL-TEMP TO TT
     DISPLAY 'TOTAL TEMP: ', TT
     DISPLAY 'AVG-TEMP: ',AVG.

-------------------------------------------------------------------------------------

IDENTIFICATION DIVISION.                                             
 PROGRAM-ID. PROGLOC.                                                  
 ENVIRONMENT DIVISION.                                                
 INPUT-OUTPUT SECTION.                                                
 FILE-CONTROL.                                                        
     SELECT EMP-FILE  ASSIGN TO 'EMPLOYEE.DAT'.                         
     SELECT WORK-FILE ASSIGN TO 'WORKFILE.DAT'.                          
     SELECT EMPLOYEE ASSIGN TO 'EMPFILE.DAT'.                           
     SELECT REPORTf ASSIGN TO 'REPORT.DAT'.                         
                          
 DATA DIVISION.                                                       
 FILE SECTION.                                                        
  FD  EMP-FILE                                              
     RECORD CONTAINS 50 CHARACTERS                             
     RECORDING MODE IS F.                                      
 01    EMP-RECORD.                                             
      03  FILLER          PIC X(20).
      03  IN-EMP-LOC      PIC X(03).                           
      03  FILLER          PIC X(08).                           
      03  IN-EMP-TECH     PIC X(04).                           
      03  FILLER          PIC X(15).   
 SD  WORK-FILE.                                                
 01  WORK-RECORD.                                              
      03  FILLER          PIC X(20).
      03  W-EMP-LOC       PIC X(03).                           
      03  FILLER          PIC X(08).                           
      03  W-EMP-TECH      PIC X(04).                           
      03  FILLER          PIC X(15).   
 FD  EMPLOYEE                                             
     RECORD CONTAINS 50 CHARACTERS                             
     RECORDING MODE IS F.                                     
 01  EMPLOYEE-FILE-RECORD.                    
     03  EMP-ID    PIC X(05).                 
     03  EMP-NAME  PIC X(15).                 
     03  EMP-LOC   PIC X(03).                 
     03  EMP-DOB   PIC X(08).                 
     03  EMP-TECH  PIC X(05).                 
     03  EMP-EARN  PIC 9(05)V99.              
     03  EMP-DEDN  PIC 9(05)V99.                                          
 FD  REPORTf                                               
     RECORD CONTAINS 80 CHARACTERS                             
     RECORDING MODE IS F.                                      
 01  REPORT-RECORD PIC X(80).                                  
  WORKING-STORAGE SECTION.                                          
 01  CHOICE             PIC 9(02).                                 
 01  WS-FILE-STAT       PIC X(02).                                 
     88  OPEN-SUCCESS             VALUE '00'.                      
 01  WS-FILE-FLAG       PIC X(01) VALUE 'N'.                       
     88  END-OF-FILE              VALUE 'Y'.                       
 01  WS-EMP-STAT       PIC X(02).                                  
 01  WS-REP-STAT       PIC X(02).                                  
 01  WS-TOT-EMP        PIC 9(01) 
                         value zero.                                  
 01  COUNTER            PIC 9(02).                                 
 01  EARN               PIC $**,**9.99.                            
 01  DEDN               PIC $**,**9.99.                            
 01  TOTAL-DEDN         PIC 9(06)V99.                              
 01  TOTAL-SAL          PIC 9(06)V99.                              
 01  TOTAL              PIC 9(05)V99.                              
 01  TOTAL-D            PIC $*,**,**9.99.                          
 01  TOTAL-S            PIC $*,**,**9.99.                          
 01  TOT                PIC $**,**9.99.                            
*01  LINE               PIC X(21) VALUE ' --- END OF FILE --- '.   
 01  HEADING-LINE1.                                                
     03  FILLER       PIC X(06) VALUE 'DATE:'.                     
     03  P-DATE       PIC X(10) VALUE SPACES.                      
     03  FILLER       PIC X(50) VALUE SPACES.                      
     03  FILLER       PIC X(06) VALUE 'TIME:'.                     
     03  P-TIME.                                                   
     05  WS-TIME-HH   PIC 9(02) VALUE ZERO.                        
     05  FILLER PIC X(01) VALUE ':'.                               
     05  WS-TIME-MM   PIC 9(02) VALUE ZERO.                        
     05  FILLER PIC X(01) VALUE ':'.                               
     05  WS-TIME-SS   PIC 9(02) VALUE ZERO.                        
 01  HEADING-LINE2.                                                
     03  FILLER       PIC X(20) VALUE 'LISTING OF EMPLOYEES'.      
     03  FILLER       PIC X(46) VALUE SPACES.                      
     03  FILLER       PIC X(06) VALUE 'PAGE:'.                     
     03  P-PAGE       PIC Z9    VALUE ZERO.                        
 01  END-LINE.                                                     
      05  FILLER       PIC X(30) VALUE '-----END OF THE PAGE----'.      
 01  END-RECORD.                                                        
     05  FILLER       PIC X(30) VALUE '-----END OF THE RECORD---'.      
 01  WS-VARIABLES.                                                      
     03  WS-DATE      PIC 9(08) VALUE ZERO.                             
     03  WS-TIME           VALUE ZERO.                                  
     05  WS-TIME-HH   PIC 9(02).                                        
     05  WS-TIME-MM   PIC 9(02).                                        
     05  WS-TIME-SS   PIC 9(02).                                        
     05  WS-TIME-FS   PIC 9(02).                                        
     03  PAGE-COUNT   PIC 9(02) VALUE ZERO.                             
     03  LINE-COUNT   PIC 9(01).                                        
     03  USER-COUNT   PIC 9(01) VALUE ZERO.                             
     03  WS-SAL       PIC 9(06)V99 VALUE ZERO.                          
 01  DETAIL-LINE.                                                       
     03  P-ID         PIC X(05) VALUE SPACES.                           
     03  FILLER       PIC X(01) VALUE SPACES.                           
     03  P-NAME       PIC X(15) VALUE SPACES.                           
     03  FILLER       PIC X(01) VALUE SPACES.            
     03  P-LOC        PIC X(03) VALUE SPACES.            
     03  FILLER       PIC X(01) VALUE SPACES.            
     03  P-DOB        PIC X(10) VALUE SPACES.            
     03  FILLER       PIC X(01) VALUE SPACES.            
     03  P-TECH       PIC X(05) VALUE SPACES.            
     03  FILLER       PIC X(01) VALUE SPACES.            
     03  P-EARN       PIC ZZZ,ZZ9.99 VALUE ZERO.         
     03  FILLER       PIC X(01) VALUE SPACES.            
     03  P-DEDN       PIC ZZZ,ZZ9.99 VALUE ZERO.         
     03  FILLER       PIC X(01) VALUE SPACES.            
     03  P-SAL        PIC ZZZ,ZZ9.99 VALUE ZERO.         
 01  HEADING-LINE3.                                      
     03  FILLER       PIC X(06) VALUE 'ID'.              
     03  FILLER       PIC X(16) VALUE 'NAME'.            
     03  FILLER       PIC X(04) VALUE 'LOC'.             
     03  FILLER       PIC X(11) VALUE 'BIRTH DATE'.      
     03  FILLER       PIC X(06) VALUE 'TECH'.            
     03  FILLER       PIC X(11) VALUE '  EARNINGS '.      
     03  FILLER       PIC X(11) VALUE 'DEDUCTIONS '.      
     03  FILLER       PIC X(10) VALUE ' TOTAL SAL'.       
 PROCEDURE DIVISION.                                     
 MAIN-PARA.                                              
     ACCEPT USER-COUNT                                    
     COMPUTE LINE-COUNT = USER-COUNT + 1                  
     PERFORM 1000-INIT-PARA                               
     PERFORM 2000-PROCESS-PARA UNTIL END-OF-FILE          
     PERFORM 3000-END-PARA                                
     STOP RUN.                                            
 1000-INIT-PARA.                                         
     PERFORM 1111-SORT-PARA                               
     OPEN INPUT EMPLOYEE                             
     DISPLAY 'EMPLOYEE STATUS:', WS-EMP-STAT              
     OPEN OUTPUT REPORTF.                             
     DISPLAY 'RECORD STATUS:', WS-REP-STAT                
     PERFORM 1200-DATE-TIME-PARA.                         
     PERFORM 1500-READ-PARA.                       
 1111-SORT-PARA.                                  
     SORT WORK-FILE                               
     ON ASCENDING KEY W-EMP-LOC                
     ON ASCENDING KEY W-EMP-TECH
     USING EMP-FILE                        
     GIVING EMPLOYEE.                    
 1200-DATE-TIME-PARA.                             
     ACCEPT WS-DATE FROM DATE             
     ACCEPT WS-TIME FROM TIME                      
     MOVE WS-DATE(1:4)   TO P-DATE(7:4)            
     MOVE WS-DATE(5:2)   TO P-DATE(4:2)            
     MOVE WS-DATE(7:2)   TO P-DATE(1:2)            
     MOVE '/'     TO P-DATE(3:1)                   
             P-DATE(6:1).                         
     MOVE CORRESPONDING WS-TIME TO P-TIME.         
 1500-READ-PARA.                                  
     READ EMPLOYEE                            
       AT END                                     
          MOVE 'Y' TO WS-FILE-FLAG                      
       NOT AT END                                  
          ADD 1 TO WS-TOT-EMP                           
     END-READ.                                      
 2000-PROCESS-PARA.                                
    PERFORM 3000-MOVE-PARA                         
    IF LINE-COUNT > USER-COUNT                     
       PERFORM 2500-HEADING-PARA                   
    END-IF                                         
    IF LINE-COUNT = USER-COUNT + 1                 
       WRITE REPORT-RECORD FROM END-LINE           
    END-IF                                         
    WRITE REPORT-RECORD FROM DETAIL-LINE           
    ADD 1 TO LINE-COUNT                            
    PERFORM 1500-READ-PARA.                        
 2500-HEADING-PARA.                                
    ADD 1 TO PAGE-COUNT                            
    MOVE PAGE-COUNT TO P-PAGE                      
        WRITE REPORT-RECORD FROM HEADING-LINE1 AFTER PAGE.     
    WRITE REPORT-RECORD FROM HEADING-LINE2.                
    WRITE REPORT-RECORD FROM HEADING-LINE3 AFTER 2.        
    MOVE ZERO TO LINE-COUNT.                               
 3000-MOVE-PARA.                                           
        MOVE EMP-ID      TO P-ID.                              
    MOVE EMP-NAME TO P-NAME.                               
    MOVE EMP-LOC TO P-LOC.                                 
    MOVE EMP-TECH TO P-TECH.                               
    MOVE EMP-EARN TO P-EARN.                               
    MOVE EMP-DEDN TO P-DEDN.                               
    MOVE EMP-DOB(1:4)   TO P-DOB(7:4)                      
    MOVE EMP-DOB(5:2)   TO P-DOB(4:2)                      
    MOVE EMP-DOB(7:2)   TO P-DOB(1:2)                      
    MOVE '/'     TO P-DOB(3:1)                             
             P-DOB(6:1).                                   
    COMPUTE WS-SAL = EMP-EARN - EMP-DEDN                   
    MOVE WS-SAL      TO P-SAL.                             
 3000-END-PARA.                                   
       WRITE REPORT-RECORD FROM END-RECORD        
                                                  
    CLOSE EMPLOYEE.

---------------------------------------------------------------------------

IDENTIFICATION DIVISION.                     
 PROGRAM-ID. PROG14.                          
 ENVIRONMENT DIVISION.                        
 INPUT-OUTPUT SECTION.                        
 FILE-CONTROL.                                
      SELECT EMP-FILE    ASSIGN TO 'EMPLOYEE.DAT'.  
      SELECT WORK-FILE   ASSIGN TO 'WORKFILE.DAT'.   
      SELECT EMPLOYEE-FILE ASSIGN TO 'EMPFILE.DAT'.           
      SELECT REPORT-FILE ASSIGN TO 'REPFILE.REP'.             
 DATA DIVISION.                               
 FILE SECTION.                                
 FD  EMP-FILE                                
     RECORD CONTAINS 50 CHARACTERS.          
 01  EMP-RECORD.                            
     03  FILLER       PIC X(20).             
     03  IN-EMP-LOC   PIC X(03).             
     03  FILLER       PIC X(08).  
     03  IN-EMP-TECH  PIC X(04).   
     03  FILLER       PIC X(15).             
 SD  WORK-FILE.                              
 01  WORK-RECORD.                           
     03  FILLER       PIC X(20).             
     03  W-EMP-LOC   PIC X(03).             
     03  FILLER       PIC X(08).  
     03  W-EMP-TECH  PIC X(04).   
     03  FILLER       PIC X(15).        
 FD  EMPLOYEE-FILE                           
      RECORD CONTAINS 50 CHARACTERS          
      RECORDING MODE IS F.                   
 01  EMPLOYEE-RECORD.              
    03  EMP-ID    PIC X(05).      
    03  EMP-NAME  PIC X(15).      
    03  EMP-LOC   PIC X(03).      
    03  EMP-DOB   PIC X(08).      
    03  EMP-TECH  PIC X(05).      
    03  EMP-EARN  PIC 9(05)V99.   
    03  EMP-DEDN  PIC 9(05)V99.                              
 FD  REPORT-FILE                             
     RECORD CONTAINS 80 CHARACTERS                
     RECORDING MODE IS F.                         
 01  REPORT-RECORD PIC X(80).                     
 WORKING-STORAGE SECTION.                         
 01  EMP-COUNTER          PIC 9(02) VALUE ZERO.
 01  TOTAL-TECH       PIC 9(02) VALUE ZERO.
 01  TOTAL-LOC        PIC 9(02) VALUE ZERO.
 01  EMP-LOCTN        PIC 9(03) VALUE ZERO.
 01  TEMP-LOCTN       PIC 9(03) VALUE ZERO.
 01  EMP-TECHNO       PIC 9(04) VALUE ZERO.
 01  TEMP-TECHNO      PIC 9(04) VALUE ZERO.
 01  WS-VARIABLES.                                
     03  WS-DATE      PIC 9(08) VALUE ZERO.       
     03  WS-TIME                VALUE ZERO.       
         05  WS-TIME-HH   PIC 9(02).              
         05  WS-TIME-MM   PIC 9(02).              
         05  WS-TIME-SS   PIC 9(02).              
         05  WS-TIME-FS   PIC 9(02).              
     03  PAGE-COUNT   PIC 9(02) VALUE ZERO.       
     03  LINE-COUNT   PIC 9(01) VALUE 4.          
*    03  CHOICE       PIC 9(02).                  
     03  WS-SAL       PIC 9(06)V99 VALUE ZERO.    
 01  COUNTER       PIC 9(02)  VALUE ZERO.         
 01  WS-FILE-STAT  PIC X(02).                     
 01  WS-REP-STAT   PIC X(02).                     
     88  OPEN-SUCCESS        VALUE '00'.                  
 01  WS-FILE-FLAG  PIC X(01) VALUE 'N'.                   
     88  END-OF-FILE         VALUE 'Y'.                   
 01  TOTAL-SAL     PIC $Z,ZZZ.99.                         
 01  EARN          PIC Z,ZZZ.99.                          
 01  DEDN          PIC Z,ZZZ.99.                          
 01  PAGEEND.                                             
     03  FILLER    PIC X(19) VALUE '--- END OF PAGE ---'. 
 01  HEADING-LINE1.                                       
     03  FILLER       PIC X(06) VALUE 'DATE:'.            
     03  P-DATE       PIC X(10) VALUE SPACES.             
     03  FILLER       PIC X(50) VALUE SPACES.             
     03  FILLER       PIC X(06) VALUE 'TIME:'.            
     03  P-TIME.                                          
         05  WS-TIME-HH   PIC 9(02) VALUE ZERO.           
         05  FILLER PIC X(01) VALUE ':'.                  
         05  WS-TIME-MM   PIC 9(02) VALUE ZERO.           
         05  FILLER PIC X(01) VALUE ':'.                  
         05  WS-TIME-SS   PIC 9(02) VALUE ZERO.                 
 01  HEADING-LINE2.                                             
     03  FILLER       PIC X(20) VALUE 'LISTING OF EMPLOYEES'.   
     03  FILLER       PIC X(46) VALUE SPACES.                   
     03  FILLER       PIC X(06) VALUE 'PAGE:'.                  
     03  P-PAGE       PIC Z9    VALUE ZERO.                     
 01  DETAIL-LINE.                                               
     03  P-ID         PIC X(05) VALUE SPACES.                   
     03  FILLER       PIC X(01) VALUE SPACES.                   
     03  P-NAME       PIC X(15) VALUE SPACES.                   
     03  FILLER       PIC X(01) VALUE SPACES.                   
     03  P-LOC        PIC X(03) VALUE SPACES.                   
     03  FILLER       PIC X(01) VALUE SPACES.                   
     03  P-DOB        PIC X(10) VALUE SPACES.                   
     03  FILLER       PIC X(01) VALUE SPACES.                   
     03  P-TECH       PIC X(05) VALUE SPACES.                   
     03  FILLER       PIC X(01) VALUE SPACES.                   
     03  P-EARN       PIC ZZZ,ZZ9.99 VALUE ZERO.                
     03  FILLER       PIC X(01) VALUE SPACES.           
     03  P-DEDN       PIC ZZZ,ZZ9.99 VALUE ZERO.        
     03  FILLER       PIC X(01) VALUE SPACES.           
     03  P-SAL    PIC ZZZ,ZZ9.99 VALUE ZERO.            
 01  HEADING-LINE3.                                     
     03  FILLER       PIC X(06) VALUE 'ID'.             
     03  FILLER       PIC X(16) VALUE 'NAME'.           
     03  FILLER       PIC X(04) VALUE 'LOC'.            
     03  FILLER       PIC X(11) VALUE 'BIRTH DATE'.     
     03  FILLER       PIC X(06) VALUE 'TECH'.           
     03  FILLER       PIC X(11) VALUE '  EARNINGS '.    
     03  FILLER       PIC X(11) VALUE 'DEDUCTIONS '.    
     03  FILLER       PIC X(10) VALUE ' TOTAL SAL'.     
 01  TECH-TOTAL-LINE.
     03  FILLER       PIC X(15) VALUE 'TECH TOTAL '.
     03  FILLER       PIC X(35) VALUE SPACES.
 01  LOC-TOTAL-LINE.    
     03  FILLER       PIC X(15) VALUE 'LOC TOTAL '.
     03  FILLER       PIC X(35) VALUE SPACES.
 PROCEDURE DIVISION.                                    
 0000-MAIN-PARA.                                        
     PERFORM 1000-INIT-PARA                             
     PERFORM 2000-PROCESS-PARA  UNTIL  END-OF-FILE      
     PERFORM 9000-END-PARA                              
     STOP RUN.                                
 1000-INIT-PARA.                              
     PERFORM 1111-SORT-PARA                   
*    ACCEPT CHOICE                            
     OPEN INPUT EMPLOYEE-FILE                 
     OPEN OUTPUT REPORT-FILE.                 
     PERFORM 1200-DATE-TIME-PARA.             
     PERFORM 1500-READ-PARA.                  
 1111-SORT-PARA.                              
     SORT WORK-FILE                           
     ON ASCENDING KEY W-EMP-LOC              
     ON ASCENDING KEY W-EMP-TECH
     USING EMP-FILE                           
     GIVING EMPLOYEE-FILE.                    
*    SORT WORK-FILE                           
*    ON ASCENDING KEY W-EMP-ID                
*    USING EMP-FILE                           
*    GIVING EMPLOYEE-FILE.                    
 1200-DATE-TIME-PARA.                         
     ACCEPT WS-DATE FROM DATE         
     ACCEPT WS-TIME FROM TIME                  
     MOVE WS-DATE(1:4)   TO P-DATE(7:4)        
     MOVE WS-DATE(5:2)   TO P-DATE(4:2)        
     MOVE WS-DATE(7:2)   TO P-DATE(1:2)        
     MOVE '/'     TO P-DATE(3:1)               
                     P-DATE(6:1).              
     MOVE CORRESPONDING WS-TIME TO P-TIME.     
 1500-READ-PARA.                               
     READ EMPLOYEE-FILE                        
     AT END                                    
        MOVE 'Y' TO WS-FILE-FLAG               
     NOT AT END                                
        ADD 1 TO COUNTER                       
        
     END-READ.                                 
 2000-PROCESS-PARA.                            
     PERFORM 3000-MOVE-PARA                    
     MOVE W-EMP-LOC TO EMP-LOCTN
     MOVE W-EMP-TECHNO TO EMP-TECHNO
     IF LINE-COUNT > 5                         
        PERFORM 2500-HEADING-PARA
         IF EMP-LOCTN = TEMP-LOCTN
            IF EMP-TECHNO = TEMP-TECHNO
                NEXT SENTENCE
            ELSE
               PERFORM TECH-CHANGE-PARA  
               ADD 1 TO EMP-TECHNO
            END-IF
         ELSE
             PERFORM TECH-CHANGE-PARA
             PERFORM LOC-CHANGE-PARA 
             ADD 1 TO EMP-LOCTN             
         END-IF
*     PERFORM PRINT-PARA                 
     PERFORM 1500-READ-PARA                   
     END-IF                                             
     WRITE REPORT-RECORD FROM DETAIL-LINE               
     ADD 1 TO LINE-COUNT                                
     PERFORM 1500-READ-PARA.                            
*     
 LOC-CHANGE-PARA.
     MOVE EMP-LOCTN TO TOTAL-LOC.
     MOVE 0 TO EMP-LOCTN, TOTAL-LOC.
 TECH-CHANGE-PARA.
     MOVE EMP-TECHNO TO TOTAL-TECH.
     MOVE 0 TO EMP-TECHNO, TOTAL-TECH.
 2500-HEADING-PARA.                                     
     ADD 1 TO PAGE-COUNT                                
     MOVE PAGE-COUNT TO P-PAGE                          
     WRITE REPORT-RECORD FROM HEADING-LINE1 AFTER PAGE. 
     WRITE REPORT-RECORD FROM HEADING-LINE2.            
     WRITE REPORT-RECORD FROM HEADING-LINE3 AFTER 2.    
     MOVE ZERO TO LINE-COUNT.                           
     WRITE REPORT-RECORD FROM PAGEEND.                  
 3000-MOVE-PARA.                                        
     MOVE EMP-ID      TO P-ID.                          
     MOVE EMP-NAME TO P-NAME.                           
     MOVE EMP-LOC TO P-LOC.                             
     MOVE EMP-TECH TO P-TECH.                           
     MOVE EMP-EARN TO P-EARN.                
     MOVE EMP-DEDN TO P-DEDN.                
     MOVE EMP-DOB(1:4)   TO P-DOB(7:4)       
     MOVE EMP-DOB(5:2)   TO P-DOB(4:2)       
     MOVE EMP-DOB(7:2)   TO P-DOB(1:2)       
     MOVE '/'     TO P-DOB(3:1)              
                     P-DOB(6:1).             
     COMPUTE WS-SAL = EMP-EARN - EMP-DEDN    
     MOVE WS-SAL      TO P-SAL.              
 9000-END-PARA.                              
     CLOSE EMPLOYEE-FILE.                    
 ----------------------------------------------------------------------

IDENTIFICATION DIVISION.                      
 PROGRAM-ID. PROG12.                           
 ENVIRONMENT DIVISION.                         
 INPUT-OUTPUT SECTION.                         
 FILE-CONTROL.                                 
      SELECT EMPLOYEE-FILE ASSIGN TO EMPFILE   
      ORGANIZATION IS SEQUENTIAL               
      ACCESS MODE  IS SEQUENTIAL               
      FILE STATUS  IS WS-FILE-STAT.            
      SELECT REPORT-FILE ASSIGN TO REPFILE     
      ORGANIZATION IS SEQUENTIAL               
      ACCESS MODE  IS SEQUENTIAL               
      FILE STATUS  IS WS-REP-STAT.             
 DATA DIVISION.                                
 FILE SECTION.                                 
 FD  EMPLOYEE-FILE                             
     RECORD CONTAINS 50 CHARACTERS             
     RECORDING MODE IS F.                        
     COPY EMPREC.                                
 FD  REPORT-FILE                                 
     RECORD CONTAINS 80 CHARACTERS               
     RECORDING MODE IS F.                        
 01  REPORT-RECORD PIC X(80).                    
 WORKING-STORAGE SECTION.                        
 01  WS-VARIABLES.                               
     03  WS-DATE      PIC 9(08) VALUE ZERO.      
     03  WS-TIME                VALUE ZERO.      
         05  WS-TIME-HH   PIC 9(02).             
         05  WS-TIME-MM   PIC 9(02).             
         05  WS-TIME-SS   PIC 9(02).             
         05  WS-TIME-FS   PIC 9(02).             
     03  PAGE-COUNT   PIC 9(02) VALUE ZERO.      
     03  LINE-COUNT   PIC 9(01) VALUE 4.         
*    03  CHOICE       PIC 9(02).                 
     03  WS-SAL       PIC 9(06)V99 VALUE ZERO.       
     01  COUNTER       PIC 9(02)  VALUE ZERO.                 
 01  WS-FILE-STAT  PIC X(02).                             
 01  WS-REP-STAT   PIC X(02).                             
     88  OPEN-SUCCESS        VALUE '00'.                  
 01  WS-FILE-FLAG  PIC X(01) VALUE 'N'.                   
     88  END-OF-FILE         VALUE 'Y'.                   
 01  TOTAL-SAL     PIC $Z,ZZZ.99.                         
 01  EARN          PIC Z,ZZZ.99.                          
 01  DEDN          PIC Z,ZZZ.99.                          
 01  PAGEEND.                                             
     03  FILLER    PIC X(19) VALUE '--- END OF PAGE ---'. 
 01  HEADING-LINE1.                                       
     03  FILLER       PIC X(06) VALUE 'DATE:'.            
     03  P-DATE       PIC X(10) VALUE SPACES.             
     03  FILLER       PIC X(50) VALUE SPACES.             
     03  FILLER       PIC X(06) VALUE 'TIME:'.            
     03  P-TIME.                                          
         05  WS-TIME-HH   PIC 9(02) VALUE ZERO.           
         05  FILLER PIC X(01) VALUE ':'.                      
         05  WS-TIME-MM   PIC 9(02) VALUE ZERO.               
         05  FILLER PIC X(01) VALUE ':'.                      
         05  WS-TIME-SS   PIC 9(02) VALUE ZERO.               
 01  HEADING-LINE2.                                           
     03  FILLER       PIC X(20) VALUE 'LISTING OF EMPLOYEES'. 
     03  FILLER       PIC X(46) VALUE SPACES.                 
     03  FILLER       PIC X(06) VALUE 'PAGE:'.                
     03  P-PAGE       PIC Z9    VALUE ZERO.                   
 01  DETAIL-LINE.                                             
     03  P-ID         PIC X(05) VALUE SPACES.                 
     03  FILLER       PIC X(01) VALUE SPACES.                 
     03  P-NAME       PIC X(15) VALUE SPACES.                 
     03  FILLER       PIC X(01) VALUE SPACES.                 
     03  P-LOC        PIC X(03) VALUE SPACES.                 
     03  FILLER       PIC X(01) VALUE SPACES.                 
     03  P-DOB        PIC X(10) VALUE SPACES.                 
     03  FILLER       PIC X(01) VALUE SPACES.                         
     03  P-TECH       PIC X(05) VALUE SPACES.          
     03  FILLER       PIC X(01) VALUE SPACES.          
     03  P-EARN       PIC ZZZ,ZZ9.99 VALUE ZERO.       
     03  FILLER       PIC X(01) VALUE SPACES.          
     03  P-DEDN       PIC ZZZ,ZZ9.99 VALUE ZERO.       
     03  FILLER       PIC X(01) VALUE SPACES.          
     03  P-SAL    PIC ZZZ,ZZ9.99 VALUE ZERO.           
 01  HEADING-LINE3.                                    
     03  FILLER       PIC X(06) VALUE 'ID'.            
     03  FILLER       PIC X(16) VALUE 'NAME'.          
     03  FILLER       PIC X(04) VALUE 'LOC'.           
     03  FILLER       PIC X(11) VALUE 'BIRTH DATE'.    
     03  FILLER       PIC X(06) VALUE 'TECH'.          
     03  FILLER       PIC X(11) VALUE '  EARNINGS '.   
     03  FILLER       PIC X(11) VALUE 'DEDUCTIONS '.   
     03  FILLER       PIC X(10) VALUE ' TOTAL SAL'.    
 PROCEDURE DIVISION.                                   
 0000-MAIN-PARA.                                            
     PERFORM 1000-INIT-PARA                          
     PERFORM 2000-PROCESS-PARA  UNTIL  END-OF-FILE   
     PERFORM 9000-END-PARA                           
     STOP RUN.                                       
 1000-INIT-PARA.                                     
*    ACCEPT CHOICE                                   
     OPEN INPUT EMPLOYEE-FILE                        
     OPEN OUTPUT REPORT-FILE.                        
     PERFORM 1200-DATE-TIME-PARA.                    
     PERFORM 1500-READ-PARA.                         
 1200-DATE-TIME-PARA.                                
     ACCEPT WS-DATE FROM DATE YYYYMMDD               
     ACCEPT WS-TIME FROM TIME                        
     MOVE WS-DATE(1:4)   TO P-DATE(7:4)              
     MOVE WS-DATE(5:2)   TO P-DATE(4:2)              
     MOVE WS-DATE(7:2)   TO P-DATE(1:2)              
     MOVE '/'     TO P-DATE(3:1)                     
                     P-DATE(6:1).                    
     MOVE CORRESPONDING WS-TIME TO P-TIME.       
 1500-READ-PARA.                                 
     READ EMPLOYEE-FILE                          
     AT END                                      
        MOVE 'Y' TO WS-FILE-FLAG                 
     NOT AT END                                  
        ADD 1 TO COUNTER                         
     END-READ.                                   
 2000-PROCESS-PARA.                              
     PERFORM 3000-MOVE-PARA                      
     IF LINE-COUNT > 3                           
        PERFORM 2500-HEADING-PARA                
     END-IF                                      
     WRITE REPORT-RECORD FROM DETAIL-LINE        
     ADD 1 TO LINE-COUNT                         
     PERFORM 1500-READ-PARA.                     
 2500-HEADING-PARA.                              
     ADD 1 TO PAGE-COUNT                                              
     MOVE PAGE-COUNT TO P-PAGE                           
     WRITE REPORT-RECORD FROM HEADING-LINE1 AFTER PAGE.  
     WRITE REPORT-RECORD FROM HEADING-LINE2.             
     WRITE REPORT-RECORD FROM HEADING-LINE3 AFTER 2.     
     MOVE ZERO TO LINE-COUNT.                            
     WRITE REPORT-RECORD FROM PAGEEND.                   
 3000-MOVE-PARA.                                         
     MOVE EMP-ID      TO P-ID.                           
     MOVE EMP-NAME TO P-NAME.                            
     MOVE EMP-LOC TO P-LOC.                              
     MOVE EMP-TECH TO P-TECH.                            
     MOVE EMP-EARN TO P-EARN.                            
     MOVE EMP-DEDN TO P-DEDN.                            
     MOVE EMP-DOB(1:4)   TO P-DOB(7:4)                   
     MOVE EMP-DOB(5:2)   TO P-DOB(4:2)                   
     MOVE EMP-DOB(7:2)   TO P-DOB(1:2)                   
     MOVE '/'     TO P-DOB(3:1)                          
                     P-DOB(6:1).                              
     COMPUTE WS-SAL = EMP-EARN - EMP-DEDN      
     MOVE WS-SAL      TO P-SAL.                
 9000-END-PARA.                                
     CLOSE EMPLOYEE-FILE.  

---------------------------------------------------------------------------

IDENTIFICATION DIVISION.                      
 PROGRAM-ID. PROG11.                           
 ENVIRONMENT DIVISION.                         
 INPUT-OUTPUT SECTION.                         
 FILE-CONTROL.                                 
     SELECT EMPLOYEE-FILE ASSIGN TO EMPLOYEE.DAT    
     ORGANIZATION IS SEQUENTIAL                
     ACCESS MODE  IS SEQUENTIAL                
     FILE STATUS  IS WS-FILE-STAT.             
 DATA DIVISION.                                
 FILE SECTION.                                 
 FD  EMPLOYEE-FILE                             
     RECORD CONTAINS 50 CHARACTERS             
     RECORDING MODE IS F.                      
 01  EMPLOYEE-FILE-RECORD.                     
     03  EMP-ID    PIC X(05).                  
     03  EMP-NAME  PIC X(15).                  
     03  EMP-LOC   PIC X(03).                 
     03  EMP-DOB   PIC X(08).                 
     03  EMP-TECH  PIC X(05).                 
     03  EMP-EARN  PIC 9(05)V99.              
     03  EMP-DEDN  PIC 9(05)V99.              
 WORKING-STORAGE SECTION.                     
 01  ACPT               PIC 9(01).
 01  WS-FILE-STAT       PIC X(02).            
     88  OPEN-SUCCESS             VALUE '00'. 
 01  WS-FILE-FLAG       PIC X(01) VALUE 'N'.  
     88  END-OF-FILE              VALUE 'Y'.  
 01  COUNTER            PIC 9(02).            
 01  EARN               PIC $**,**9.99.       
 01  DEDN               PIC $**,**9.99.       
 01  TOTAL-DEDN         PIC 9(06)V99.         
 01  TOTAL-SAL          PIC 9(06)V99.         
 01  TOTAL              PIC 9(05)V99.         
 01  TOTAL-D            PIC $*,**,**9.99.     
 01  TOTAL-S            PIC $*,**,**9.99.     
 01  TOT                PIC $**,**9.99.                          
*                                                                
 01  HEADING-LINE1.                                              
     03  FILLER         PIC X(06) VALUE 'DATE:'.                 
     03  P-DATE         PIC X(10) VALUE SPACES.                  
     03  FILLER         PIC X(50) VALUE SPACES.                  
     03  FILLER         PIC X(06) VALUE 'TIME:'.                 
     03  P-TIME         PIC X(08) VALUE SPACES.                  
 01  HEADING-LINE2.                                              
     03  FILLER         PIC X(20) VALUE 'LISTING OF EMPLOYEES'.  
     03  FILLER         PIC X(46) VALUE SPACES.                  
     03  FILLER         PIC X(06) VALUE 'PAGE:'.                 
     03  P-PAGE         PIC Z9    VALUE ZERO.                    
 01  DETAIL-LINE.                                                
     03  P-ID           PIC X(05) VALUE SPACES.                  
     03  FILLER         PIC X(01) VALUE SPACES.                  
     03  P-NAME         PIC X(15) VALUE SPACES.                  
     03  FILLER         PIC X(01) VALUE SPACES.                  
     03  P-LOC          PIC X(03) VALUE SPACES.         
     03  FILLER         PIC X(01) VALUE SPACES.         
     03  P-DOB          PIC X(10) VALUE SPACES.         
     03  FILLER         PIC X(01) VALUE SPACES.         
     03  P-TECH         PIC X(05) VALUE SPACES.         
     03  FILLER         PIC X(01) VALUE SPACES.         
     03  P-EARN         PIC ZZZ,ZZ9.99 VALUE ZERO.      
     03  FILLER         PIC X(01) VALUE SPACES.         
     03  P-DEDN         PIC ZZZ,ZZ9.99 VALUE ZERO.      
     03  FILLER         PIC X(01) VALUE SPACES.         
     03  P-SAL          PIC ZZZ,ZZ9.99 VALUE ZERO.      
 01  HEADING-LINE3.                                     
     03  FILLER         PIC X(06) VALUE 'ID'.           
     03  FILLER         PIC X(16) VALUE 'NAME'.         
     03  FILLER         PIC X(06) VALUE 'LOC'.          
     03  FILLER         PIC X(06) VALUE 'BIRTH DATE'.   
     03  FILLER         PIC X(06) VALUE 'TECH'.         
     03  FILLER         PIC X(06) VALUE '  EARNINGS '.  
     03  FILLER         PIC X(06) VALUE 'DEDUCTUIONS '.            
     03  FILLER         PIC X(06) VALUE ' TOTAL SAL'.              
 PROCEDURE DIVISION.                                               
 MAIN-PARA.                                                        
     PERFORM 1000-INIT-PARA                                        
     PERFORM 2000-PROCESS-PARA UNTIL END-OF-FILE                   
     PERFORM 3000-END-PARA                                         
     STOP RUN.                                                     
 1000-INIT-PARA.                                                   
     OPEN INPUT EMPLOYEE-FILE                                      
     IF OPEN-SUCCESS                                               
         DISPLAY 'FILE HAS BEEN SUCCESSFULLY OPENED'               
        DISPLAY '================================================' 
               '======================'                            
         DISPLAY '  ID    ' 'NAME       ' 'LOC ' '     DOB    '    
                '  TECH    ' 'EARNINGS ' 'DEDUCTION' ' TOTAL'      
        DISPLAY '-----------------------------------------'        
                '---------------------------'                      
     END-IF                                                   
     PERFORM 1500-READ-PARA.                                  
 1500-READ-PARA.                                              
     READ EMPLOYEE-FILE                                       
     AT END                                                   
        MOVE 'Y' TO WS-FILE-FLAG                              
        DISPLAY '-----------------------------------------'   
        DISPLAY 'NUMBER OF EMPLOYEE: ', COUNTER               
        DISPLAY '-----------------------------------------'   
        DISPLAY 'TOTAL SALARY: ', TOTAL-S                     
        DISPLAY 'TOTAL DEDUCTION: ', TOTAL-D                  
*    NOT AT END                                               
*       DISPLAY 'FILE READ SUCCESSFULLY'                      
     END-READ.                                                
 2000-PROCESS-PARA.                                           
     MOVE EMP-EARN TO EARN                                    
     ADD EMP-EARN TO TOTAL-SAL                                
     MOVE TOTAL-SAL TO TOTAL-S                                            
     MOVE EMP-DEDN TO DEDN                                         
     ADD EMP-DEDN TO TOTAL-DEDN                                    
     MOVE TOTAL-DEDN TO TOTAL-D                                    
     SUBTRACT EMP-DEDN FROM EMP-EARN GIVING TOTAL                  
     MOVE TOTAL TO TOT                                             
     DISPLAY ' ', EMP-ID ' ' EMP-NAME ' ' EMP-LOC ' ' EMP-DOB ' '  
             EMP-TECH ' ' EARN ' ' DEDN ' ' TOT                    
     PERFORM 1500-READ-PARA                                        
     ADD 1 TO COUNTER.                                             
 3000-END-PARA.                                                    
     CLOSE EMPLOYEE-FILE
     ACCEPT ACPT.                                          

------------------------------------------------------------------------------

IDENTIFICATION DIVISION.                            
 PROGRAM-ID. PROG10.                                 
 DATA DIVISION.                                      
 WORKING-STORAGE SECTION.                            
 01  ACPT               PIC 9(01).
 01  WS-OUTPUTS.                                     
     03  WS-C           PIC 9(03)    VALUE ZERO.     
     03  WS-D           PIC S9(02)   VALUE ZERO.     
     03  WS-E           PIC 9(04)    VALUE ZERO.     
     03  WS-F           PIC 9(02)V99 VALUE ZERO.     
 01  WS-DISPLAY.                                     
     03  WS-C-O         PIC ZZ9.                     
     03  WS-D-O         PIC -9(02).                  
     03  WS-E-O         PIC $Z,ZZ9.                  
     03  WS-F-O         PIC 9(02).99.                
 01  WS-INPUTS                       VALUE ZERO.     
     88  END-OF-DATA                 VALUE 'XXXX'.   
     03  WS-A           PIC 9(02).                   
     03  WS-B           PIC 9(02).                    
 PROCEDURE DIVISION.                                  
 MAIN-PARA.                                           
     PERFORM 1000-INIT-PARA                           
     THRU    1000-INIT-PARA-X                         
     PERFORM 2000-PROCESS-PARA                        
     THRU    2000-PROCESS-PARA-X  UNTIL  END-OF-DATA  
     PERFORM 9000-END-PARA                            
     THRU    9000-END-PARA-X                          
     STOP RUN.                                        
*                                                     
 1000-INIT-PARA.                                      
     DISPLAY 'STARTING OF THE PROGRAM'                
     ACCEPT WS-INPUTS.                                
 1000-INIT-PARA-X.                                    
     EXIT.                                            
*                                                     
 2000-PROCESS-PARA.                                   
     IF WS-A IS NUMERIC AND WS-B IS NUMERIC    
        PERFORM 3000-CALCULATE-PARA            
        THRU    3000-CALCULATE-PARA-X          
     ELSE                                      
        DISPLAY 'INPUTS ARE NOT NUMERIC'       
     END-IF                                    
     ACCEPT WS-INPUTS.                         
 2000-PROCESS-PARA-X.                          
     EXIT.                                     
*                                              
 3000-CALCULATE-PARA.                          
     INITIALIZE WS-DISPLAY, WS-OUTPUTS         
     PERFORM 4000-PARA-ADD                     
     THRU    4000-PARA-ADD-X                   
     PERFORM 5000-PARA-SUBTRACT                
     THRU    5000-PARA-SUBTRACT-X              
     PERFORM 6000-PARA-MULTIPLY                
     THRU    6000-PARA-MULTIPLY-X              
     PERFORM 7000-PARA-DIVIDE                
     THRU    7000-PARA-DIVIDE-X              
     DISPLAY '==========='.                  
 3000-CALCULATE-PARA-X.                      
     EXIT.                                   
*                                            
 4000-PARA-ADD.                              
     DISPLAY 'PARA ADD       '               
     DISPLAY '==========='                   
     ADD WS-A TO WS-B GIVING WS-C            
     MOVE WS-C TO WS-C-O                     
     DISPLAY 'ADD  ', WS-C-O.                
 4000-PARA-ADD-X.                            
     EXIT.                                   
*                                            
 5000-PARA-SUBTRACT.                         
     DISPLAY 'PARA SUBTRACT  '               
     SUBTRACT WS-A FROM WS-B GIVING WS-D     
     MOVE WS-D TO WS-D-O                                 
     DISPLAY 'SUB  ', WS-D-O.                            
 5000-PARA-SUBTRACT-X.                                   
     EXIT.                                               
*                                                        
 6000-PARA-MULTIPLY.                                     
     DISPLAY 'PARA MULTIPLY  '                           
     MULTIPLY WS-A BY WS-B GIVING WS-E                   
     MOVE WS-E TO WS-E-O                                 
     DISPLAY 'MULT ', WS-E-O.                            
 6000-PARA-MULTIPLY-X.                                   
     EXIT.                                               
*                                                        
 7000-PARA-DIVIDE.                                       
     DISPLAY 'PARA DIVIDE    '                           
     IF WS-B = ZERO                                      
        DISPLAY 'ZERO DIVIDE NOT POSSIBLE - ZERO CHECK'  
     ELSE                                                
        DIVIDE WS-A BY WS-B GIVING WS-F                     
        MOVE WS-F TO WS-F-O                                 
        DISPLAY 'DIV  ', WS-F-O                             
     END-IF.                                                
*                                                           
     IF WS-B IS POSITIVE                                    
        DIVIDE WS-A BY WS-B GIVING WS-F                     
        MOVE WS-F TO WS-F-O                                 
        DISPLAY 'DIV  ', WS-F-O                             
     ELSE                                                   
        DISPLAY 'ZERO DIVIDE NOT POSSIBLE - POSITIVE CHECK' 
     END-IF.                                                
 7000-PARA-DIVIDE-X.                                        
     EXIT.                                                  
*                                                           
 9000-END-PARA.                                             
     DISPLAY 'END OF DATA, QUITTING PROGRAM. BYE, BYE!!'
     ACCEPT ACPT.   
 9000-END-PARA-X.                                           
     EXIT. 

--------------------------------------------------------------------------------

IDENTIFICATION DIVISION.                   
 PROGRAM-ID. PROG09.                        
 DATA DIVISION.                             
 WORKING-STORAGE SECTION.                   
 01  ACPT               PIC 9(01).
 01  INPUTS.                                
     03  NUM1           PIC 9(03).          
     03  NUM2           PIC 9(03).          
 01  ADDITION.                              
     03  WS-ADD1        PIC 9(04).          
 01  SUBTRACTION.                           
     03  WS-SUB1        PIC S9(03).         
 01  PRODUCT.                               
     03  WS-PRO1        PIC 9(05).          
 01  DIVSN.                                 
     03  WS-DIV1        PIC 9(03)V99.       
 PROCEDURE DIVISION.                        
 MAIN-PARA.                                 
     ACCEPT NUM1                                         
     ACCEPT NUM2                                         
     PERFORM  UNTIL  INPUTS = 'XXX'                      
        IF NUM1 IS NUMERIC AND NUM2 IS NUMERIC           
           PERFORM PROCESS-PARA                          
        ELSE                                             
           DISPLAY 'INPUTS ARE NOT NUMERIC'              
        END-IF                                           
        ACCEPT INPUTS                                    
     END-PERFORM.                                        
     DISPLAY 'END OF DATA - PROGRAM ENDING. BYE BYE!!'   
     STOP RUN .                                          
 PROCESS-PARA.                                           
     PERFORM PARA-ADD                                    
     PERFORM PARA-SUBTRACT                               
     PERFORM PARA-MULTIPLY                               
     PERFORM PARA-DIVIDE                                 
*     ACCEPT CHOICE.                                      
 PARA-ADD.                                           
     DISPLAY '=================================='    
     ADD NUM1 NUM2 GIVING WS-ADD1                    
     DISPLAY 'ADDITION: ', WS-ADD1.                  
 PARA-SUBTRACT.                                      
     SUBTRACT NUM2 FROM NUM1 GIVING WS-SUB1          
     DISPLAY 'SUBTRACTION: ', WS-SUB1.               
 PARA-MULTIPLY.                                      
     MULTIPLY NUM1 BY NUM2 GIVING WS-PRO1            
     DISPLAY 'MULTIPLICATION: ', WS-PRO1.            
 PARA-DIVIDE.                                        
     DIVIDE NUM1 BY NUM2 GIVING WS-DIV1              
     DISPLAY 'DIVISION: ', WS-DIV1                   
     DISPLAY '==================================='
     ACCEPT ACPT.  

--------------------------------------------------------------------------------

IDENTIFICATION DIVISION.                    
 PROGRAM-ID. PROG08.                         
 DATA DIVISION.                              
 WORKING-STORAGE SECTION.                    
 01  ACPT               PIC 9(01).
 01  INPUTS.                                 
     03  NUM1           PIC 9(03).           
     03  NUM2           PIC 9(03).           
 01  ADDITION.                               
     03  WS-ADD1        PIC 9(04).           
 01  SUBTRACTION.                            
     03  WS-SUB1        PIC S9(03).          
     03  WS-SUB2        PIC -9(03).          
 01  PRODUCT.                                
     03  WS-PRO1        PIC 9(05).           
 01  DIVSN.                                  
     03  WS-DIV1        PIC 9(03)V99.        
     03  WS-DIV2        PIC 9(03).99.        
 PROCEDURE DIVISION.                                
     ACCEPT NUM1                                    
     ACCEPT NUM2                                    
     IF NUM1 IS NOT NUMERIC OR NUM2 IS NOT NUMERIC  
*    IF NUM1 IS NUMERIC AND NUM2 IS NUMERIC         
        DISPLAY 'INPUTS ARE NOT NUMERIC'            
     ELSE                                           
        PERFORM PROCESS-PARA                        
     END-IF                                         
     STOP RUN.                                      
 PROCESS-PARA.                                      
     PERFORM PARA-ADD                               
     PERFORM PARA-SUBTRACT                          
     PERFORM PARA-MULTIPLY                          
     PERFORM PARA-DIVIDE.                           
 PARA-ADD.                                          
     DISPLAY '=================================='   
     ADD NUM1 NUM2 GIVING WS-ADD1                   
     DISPLAY 'ADDITION: ', WS-ADD1                  
     DISPLAY '----------------------------------'.  
 PARA-SUBTRACT.                                     
     SUBTRACT NUM2 FROM NUM1 GIVING WS-SUB1         
     MOVE WS-SUB1 TO WS-SUB2                        
     DISPLAY 'SUBTRACTION: ', WS-SUB1               
     DISPLAY 'SUBTRACTION(WITH SIGN): ', WS-SUB2    
     DISPLAY '----------------------------------'.  
 PARA-MULTIPLY.                                     
     MULTIPLY NUM1 BY NUM2 GIVING WS-PRO1           
     DISPLAY 'MULTIPLICATION: ', WS-PRO1            
     DISPLAY '----------------------------------'.  
 PARA-DIVIDE.                                       
     DIVIDE NUM1 BY NUM2 GIVING WS-DIV1             
     DISPLAY 'DIVISION: ', WS-DIV1                  
     DISPLAY '==================================='
     ACCEPT ACPT. 

-------------------------------------------------------------------------------

IDENTIFICATION DIVISION.                     
 PROGRAM-ID. PROG07.                          
 DATA DIVISION.                               
 WORKING-STORAGE SECTION.                     
 01  INPUTS.                                  
     03  NUM1           PIC 9(03).            
     03  NUM2           PIC 9(03).            
 01  ADDITION.                                
     03  WS-ADD1            PIC 9(04).        
 01  SUBTRACTION.                             
     03  WS-SUB1            PIC S9(03).       
     03  WS-SUB2            PIC -9(03).       
 01  PRODUCT.                                 
     03  WS-PRO1            PIC 9(05).        
 01  DIVSN.                                   
     03  WS-DIV1            PIC 9(03)V99.     
     03  WS-DIV2            PIC 9(03).99.     
 01  ACPT                   PIC 9(01).    
 PROCEDURE DIVISION.                                 
     ACCEPT NUM1.                                    
     ACCEPT NUM2.                                    
     IF NUM1 IS NOT NUMERIC OR NUM2 IS NOT NUMERIC   
*    IF NUM1 IS NUMERIC AND NUM2 IS NUMERIC          
        DISPLAY 'INPUTS ARE NOT NUMERIC'             
        STOP RUN                                     
     ELSE                                            
*                                                    
     DISPLAY '=================================='    
     DISPLAY 'NUM1: ', NUM1                          
     DISPLAY 'NUM2: ', NUM2                          
     DISPLAY '----------------------------------'    
     ADD NUM1 NUM2 GIVING WS-ADD1.                   
     DISPLAY 'ADDITION: ', WS-ADD1                   
     DISPLAY '----------------------------------'    
     SUBTRACT NUM2 FROM NUM1 GIVING WS-SUB1.         
     MOVE WS-SUB1 TO WS-SUB2.                        
     DISPLAY 'SUBTRACTION: ', WS-SUB1                  
     DISPLAY 'SUBTRACTION(WITH SIGN): ', WS-SUB2       
     DISPLAY '----------------------------------'      
     MULTIPLY NUM1 BY NUM2 GIVING WS-PRO1.             
     DISPLAY 'MULTIPLICATION: ', WS-PRO1               
     DISPLAY '----------------------------------'      
*                                                      
     IF NUM2 = ZERO                                    
        DISPLAY 'ZERO DIVIDE NOT POSSIBLE ZERO CHECK'  
     ELSE                                              
        DIVIDE NUM1 BY NUM2 GIVING WS-DIV1             
        DISPLAY 'DIVISION: ', WS-DIV1                  
     END-IF.                                           
     IF NUM2 IS POSITIVE                               
        DISPLAY 'ZERO DIVIDE NOT POSSIBLE +VE CHECK'   
     ELSE                                              
        DIVIDE NUM1 BY NUM2 GIVING WS-DIV1             
        DISPLAY 'DIVISION: ', WS-DIV1                  
     END-IF.                                        
     DISPLAY '==================================='  
     ACCEPT ACPT
     STOP RUN.                                      

----------------------------------------------------------------------------

IDENTIFICATION DIVISION.                  
 PROGRAM-ID. PROG06.                       
 DATA DIVISION.                            
 WORKING-STORAGE SECTION.                  
 01  INPUTS.                               
     03  NUM1           PIC 9(03).         
     03  NUM2           PIC 9(03).         
 01  ADDITION.                             
     03  WS-ADD1            PIC 9(04).     
     03  WS-ADD2            PIC ZZZ9.      
     03  WS-ADD3            PIC $Z,ZZ9.    
 01  SUBTRACTION.                          
     03  WS-SUB1            PIC S9(03).    
     03  WS-SUB2            PIC -9(03).    
 01  PRODUCT.                              
     03  WS-PRO1            PIC 9(05).     
     03  WS-PRO2            PIC ZZZZ9.     
     03  WS-PRO3            PIC $**,**9.          
 01  DIVSN.                                       
     03  WS-DIV1            PIC 9(03)V99.         
     03  WS-DIV2            PIC 9(03).99.         
 01  ACPT                   PIC 9(01).
 PROCEDURE DIVISION.                              
     ACCEPT NUM1.                                 
     ACCEPT NUM2.                                 
     ADD NUM1 NUM2 GIVING WS-ADD1.                
     MOVE WS-ADD1 TO WS-ADD2.                     
     MOVE WS-ADD1 TO WS-ADD3.                     
     SUBTRACT NUM2 FROM NUM1 GIVING WS-SUB1.      
     MOVE WS-SUB1 TO WS-SUB2.                     
     MULTIPLY NUM1 BY NUM2 GIVING WS-PRO1.        
     MOVE WS-PRO1 TO WS-PRO2.                     
     MOVE WS-PRO1 TO WS-PRO3.                     
     DIVIDE NUM1 BY NUM2 GIVING WS-DIV1.          
     MOVE WS-DIV1 TO WS-DIV2.                     
     DISPLAY '==================================' 
     DISPLAY 'NUM1: ', NUM1                           
     DISPLAY 'NUM2: ', NUM2                           
     DISPLAY '----------------------------------'     
     DISPLAY 'ADDITION: ', WS-ADD1                    
     DISPLAY 'ADDITION(ANS WITH ,): ', WS-ADD3        
     DISPLAY 'ADDITION(WITHOUT 0): ', WS-ADD2         
     DISPLAY '----------------------------------'     
     DISPLAY 'SUBTRACTION: ', WS-SUB1                 
     DISPLAY 'SUBTRACTION(WITH SIGN): ', WS-SUB2      
     DISPLAY '----------------------------------'     
     DISPLAY 'MULTIPLICATION: ', WS-PRO1              
     DISPLAY 'MULTIPLICATION(ANS WITH ,): ', WS-PRO3  
     DISPLAY 'MULTIPLICATION(WITHOUT 0): ', WS-PRO2   
     DISPLAY '----------------------------------'     
     DISPLAY 'DIVISION: ', WS-DIV1                    
     DISPLAY 'DIVISION(WITH DECIMAL): ', WS-DIV2      
     DISPLAY '==================================='    
     ACCEPT ACPT
     STOP RUN.       

---------------------------------------------------------------------------

IDENTIFICATION DIVISION.                   
 PROGRAM-ID. PROG05.                        
 DATA DIVISION.                             
 WORKING-STORAGE SECTION.                   
 01  WS-INPUTS.                             
     03  WS-INPUT1          PIC X(5).       
     03  WS-INPUT2          PIC X(10).      
 01  WS-OUTPUT1.                            
     03  WS-OUT11           PIC X(10).      
     03  WS-OUT12           PIC X(5).       
 01  WS-OUTPUT2.                            
     03  WS-OUT21           PIC X(5).       
     03  WS-OUT22           PIC X(10).      
 01  ACPT                   PIC X(01).
 PROCEDURE DIVISION.                        
     ACCEPT WS-INPUTS                       
     MOVE WS-INPUT1 TO WS-OUT11, WS-OUT12   
     MOVE WS-INPUT2 TO WS-OUT21, WS-OUT22   
     MOVE WS-INPUTS TO WS-OUTPUT1                
     DISPLAY '-----------------'                 
     DISPLAY 'INPUT: ', WS-INPUTS                
     DISPLAY '-----------------'                 
     DISPLAY 'OUTPUT 1: ', WS-OUT11 ' ' WS-OUT12 
     DISPLAY '-----------------'                 
     DISPLAY 'OUTPUT 2: ', WS-OUT21 ' ' WS-OUT22 
     ACCEPT  ACPT
     STOP RUN.  

------------------------------------------------------------------------------

IDENTIFICATION DIVISION.                        
 PROGRAM-ID. PROG04.                             
 DATA DIVISION.                                  
 WORKING-STORAGE SECTION.                        
 01  WS-DATE-YYMMDD  PIC 9(08).                  
 01  WS-DATE-CCYYMMDD PIC 9(08).                 
 01  WS-DATE-6       PIC 9(08).                  
 01  WS-DATE-8       PIC 9(08).                  
 01  WS-TIME        PIC 9(08).                   
 01  ACPT           PIC 9(01).
 PROCEDURE DIVISION.                             
     ACCEPT WS-DATE-YYMMDD FROM DATE             
     ACCEPT WS-DATE-CCYYMMDD FROM DATE
     ACCEPT WS-DATE-6      FROM DATE             
     ACCEPT WS-DATE-8      FROM DATE 
     ACCEPT WS-TIME FROM TIME                    
     DISPLAY '-----------------'                 
     DISPLAY 'CURRENT DATE ' WS-DATE-YYMMDD      
     DISPLAY 'CURRENT DATE ' WS-DATE-CCYYMMDD 
     DISPLAY '-----------------'              
     DISPLAY 'CURRENT DATE ' WS-DATE-6        
     DISPLAY 'CURRENT DATE ' WS-DATE-8        
     DISPLAY '-----------------'              
     DISPLAY 'CURRENT TIME ' WS-TIME          
     DISPLAY '-----------------'              
     ACCEPT ACPT
     STOP RUN.

------------------------------------------------------------------------

IDENTIFICATION DIVISION.                
 PROGRAM-ID. PROG03.                     
 DATA DIVISION.                          
 WORKING-STORAGE SECTION.                
 01  WS-INPUTS.                          
     03  WS-F1          PIC X(10).       
     03  WS-F2          PIC X(10).       
 PROCEDURE DIVISION.                     
     ACCEPT WS-INPUTS                    
     DISPLAY '-----------------'         
     DISPLAY WS-F1                       
     DISPLAY '-----------------'         
     DISPLAY WS-F2                       
     DISPLAY '-----------------'         
     DISPLAY WS-INPUTS                   
     STOP RUN.       

--------------------------------------------------------------------

IDENTIFICATION DIVISION.          
 PROGRAM-ID. PROG02.               
 DATA DIVISION.                    
 WORKING-STORAGE SECTION.          
 01  WS-INPUT1          PIC X(10). 
 77  WS-INPUT2          PIC X(10). 
 PROCEDURE DIVISION.               
     ACCEPT WS-INPUT1              
     ACCEPT WS-INPUT2              
     DISPLAY '============'        
     DISPLAY WS-INPUT1             
     DISPLAY WS-INPUT2             
     DISPLAY '============'        
     STOP RUN.                     

---------------------------------------------------------------------

IDENTIFICATION DIVISION.
 PROGRAM-ID. KSDS3.
 ENVIRONMENT DIVISION.
 INPUT-OUTPUT SECTION.
 FILE-CONTROL.
     SELECT EMPLOYEE-MASTER ASSIGN TO 'EMPMAST.DAT'
        ORGANIZATION IS INDEXED
        ACCESS MODE  IS RANDOM
        RECORD KEY   IS EMP-ID
        FILE STATUS  IS WS-EMP-STAT.
     SELECT REPORT-FILE ASSIGN TO 'REPFILE.REP'
        ORGANIZATION IS SEQUENTIAL
        ACCESS MODE  IS SEQUENTIAL 
        FILE STATUS  IS WS-REP-STAT.
        SELECT TRANSACTION-FILE ASSIGN TO 'TRANSACTION.DAT'
        ORGANIZATION IS SEQUENTIAL
        ACCESS MODE  IS SEQUENTIAL
        FILE STATUS  IS WS-INP-STAT.
 DATA DIVISION.
 FILE SECTION.
 FD  EMPLOYEE-MASTER
     RECORD CONTAINS 50 CHARACTERS.
 01  MASTER-RECORD.              
     03  EMP-ID       PIC X(05).   
     03  EMP-NAME     PIC X(15).   
     03  EMP-LOC      PIC X(03).   
     03  EMP-DOB      PIC X(08).   
     03  EMP-TECH     PIC X(05).   
     03  EMP-EARN     PIC 9(05)V99.
     03  EMP-DEDN     PIC 9(05)V99.
*    COPY 'EMPREC.dat'.
 FD  TRANSACTION-FILE.     
 01  T-RECORD.              
     03  T-CODE       PIC X(01).
         88  VALID-CODE  VALUE 'A', 'U', 'D'.
         88  EMP-ADD     VALUE 'A'.
         88  EMP-UPD     VALUE 'U'.
         88  EMP-DEL     VALUE 'D'.
     03  T-ID        PIC X(05).   
*     03  T-DATA      PIC X(45).
     03  T-NAME     PIC X(15).   
     03  T-LOC      PIC X(03).   
     03  T-DOB      PIC X(08).   
     03  T-TECH     PIC X(05).   
     03  T-EARN     PIC 9(05)V99.
     03  T-DEDN     PIC 9(05)V99.     
 FD  REPORT-FILE.                                 
 01  REPORT-RECORD PIC X(60).
 WORKING-STORAGE SECTION.   
* 01 TOT-RECS         PIC 9(02) VALUE ZERO.
 01  EMP-SAL         PIC 9(05)V99.
 01  WS-VARIABLES.
     03  WS-FILE-FLAG    PIC X(01)   VALUE 'N'.
         88  END-OF-FILE             VALUE 'Y'.
     03  WS-EMP-FLAG     PIC X(01)   VALUE 'N'.
         88  EMP-FOUND               VALUE 'Y'.
     03  WS-ERROR-FLAG   PIC X(01)   VALUE 'N'.
         88  ERROR-OCCURRED          VALUE 'Y'.
     03  EMP-VALID       PIC 9(02) VALUE ZERO.
     03  EMP-INVALID     PIC 9(02) VALUE ZERO.
     03  TOT-RECS        PIC 9(02) VALUE ZERO.
     03  WS-EMP-STAT     PIC X(02) VALUE SPACES.
     03  WS-INP-STAT     PIC X(02) VALUE SPACES.
     03  WS-REP-STAT     PIC X(02) VALUE SPACES.
 01  WS-VARIABLES.                               
     03  WS-DATE      PIC 9(08) VALUE ZERO.      
     03  WS-TIME                VALUE ZERO.      
         05  WS-TIME-HH   PIC 9(02).             
         05  WS-TIME-MM   PIC 9(02).             
         05  WS-TIME-SS   PIC 9(02).             
         05  WS-TIME-FS   PIC 9(02).             
   
*    03  CHOICE       PIC 9(02).                 
     03  WS-SAL       PIC 9(06)V99 VALUE ZERO.       
              
  
 01  TOTAL-SAL     PIC $Z,ZZZ.99.                         
 01  EARN          PIC Z,ZZZ.99.                          
 01  DEDN          PIC Z,ZZZ.99.
 01  DETAIL-LINE.                                             
     03  P-ID        PIC X(07) VALUE SPACES.                 
     03  P-CODE      PIC X(03) VALUE SPACES.                 
     03  P-MESSAGE   PIC X(50) VALUE SPACES.                 
 01  RECS-READ       PIC 9(02) VALUE ZERO.
 01  RECS-ADDED      PIC 9(02) VALUE ZERO.
 01  RECS-UPDATED    PIC 9(02) VALUE ZERO.
 01  RECS-DELETED    PIC 9(02) VALUE ZERO.
 01  RECS-ERROR      PIC 9(02) VALUE ZERO.
* 01  HEADING-LINE.                                    
*     03  FILLER       PIC X(06) VALUE 'ID'.            
*     03  FILLER       PIC X(16) VALUE 'NAME'.          
*     03  FILLER       PIC X(04) VALUE 'LOC'.           
*     03  FILLER       PIC X(11) VALUE 'BIRTH DATE'.    
*     03  FILLER       PIC X(06) VALUE 'TECH'.          
*     03  FILLER       PIC X(11) VALUE '  EARNINGS '.   
*     03  FILLER       PIC X(11) VALUE 'DEDUCTIONS '.   
*     03  FILLER       PIC X(10) VALUE ' TOTAL SAL'.
 PROCEDURE DIVISION.
 0000-MAIN-PARA.
     PERFORM 1000-INIT-PARA.
     PERFORM 2000-PROCESS-PARA  UNTIL  END-OF-FILE
     PERFORM 9000-END-PARA
     STOP RUN.
 1000-INIT-PARA.
     OPEN I-O EMPLOYEE-MASTER 
     OPEN INPUT TRANSACTION-FILE
     OPEN OUTPUT REPORT-FILE.  
     DISPLAY 'EMP OPEN FS ', WS-EMP-STAT
     DISPLAY 'TRANS OPEN FS ', WS-INP-STAT
     DISPLAY 'REP OPEN FS ', WS-REP-STAT
     PERFORM 1500-READ-PARA.
 1500-READ-PARA.
     READ TRANSACTION-FILE
        AT END
           MOVE 'Y' TO WS-FILE-FLAG
        NOT AT END
           ADD 1 TO TOT-RECS
     END-READ.
 2000-PROCESS-PARA.
     IF VALID-CODE
         PERFORM 2500-READ-MASTER 
     END-IF.
     EVALUATE TRUE
     WHEN EMP-ADD
         PERFORM PARA-ADD
     WHEN EMP-UPD
         PERFORM PARA-UPDATE
     WHEN EMP-DEL
         PERFORM PARA-DELETE
     WHEN OTHER
         MOVE 'INVALID TRANSACTION CODE' TO P-MESSAGE
     END-EVALUATE.
     PERFORM WRITE-REPORT
     IF ERROR-OCCURRED
     ADD 1  TO RECS-ERROR
     MOVE 'N' TO WS-ERROR-FLAG
     END-IF
     PERFORM 1500-READ-PARA.
 
 WRITE-REPORT.
     MOVE T-ID TO P-ID
     MOVE T-CODE TO P-CODE
     WRITE REPORT-RECORD FROM DETAIL-LINE.
 PARA-ADD.
     IF EMP-FOUND
        MOVE 'EMPLOYEE TO ADD EXISTS' TO P-MESSAGE
        MOVE 'Y' TO WS-ERROR-FLAG
     ELSE
        PERFORM 3000-MOVE-PARA 
        PERFORM WRITE-PARA
     END-IF.
 PARA-UPDATE.
     IF EMP-FOUND
        PERFORM 3000-MOVE-PARA
        PERFORM REWRITE-PARA
     ELSE
        MOVE 'EMPLOYEE TO UPDATE NOT FOUND' TO P-MESSAGE
        MOVE 'Y' TO WS-ERROR-FLAG
     END-IF.
 PARA-DELETE.
     IF EMP-FOUND
        PERFORM 3000-MOVE-PARA
        PERFORM DELETE-PARA
     ELSE
        MOVE 'EMPLOYEE TO UPDATE NOT FOUND' TO P-MESSAGE
        MOVE 'Y' TO WS-ERROR-FLAG
     END-IF.    
 WRITE-PARA.    
*     PERFORM 3000-MOVE-PARA
     WRITE MASTER-RECORD
         INVALID KEY
             MOVE 'EMPLOYEE TO ADD EXISTS' TO P-MESSAGE
             MOVE 'Y' TO WS-ERROR-FLAG
         NOT INVALID KEY
             MOVE 'EMPLOYEE ADDED SUCCESSFULLY' TO P-MESSAGE
             ADD 1 TO RECS-ADDED
     END-WRITE.
   
 REWRITE-PARA.
*     PERFORM 3000-MOVE-PARA
     REWRITE MASTER-RECORD
         INVALID KEY
             MOVE 'EMPLOYEE TO UPDATE EXISTS' TO P-MESSAGE
             MOVE 'Y' TO WS-ERROR-FLAG
         NOT INVALID KEY
             MOVE 'EMPLOYEE UPDATED SUCCESSFULLY' TO P-MESSAGE
             ADD 1 TO RECS-UPDATED
     END-REWRITE.
     
 DELETE-PARA.
*     PERFORM 3000-MOVE-PARA
      DELETE EMPLOYEE-MASTER
         INVALID KEY
             MOVE 'EMPLOYEE TO DELETE EXISTS' TO P-MESSAGE
             MOVE 'Y' TO WS-ERROR-FLAG
         NOT INVALID KEY
             MOVE 'EMPLOYEE DELETED SUCCESSFULLY' TO P-MESSAGE
             ADD 1 TO RECS-DELETED
      END-DELETE.
     
 2500-READ-MASTER.
     MOVE T-ID TO EMP-ID
     READ EMPLOYEE-MASTER
         INVALID KEY
             MOVE 'N' TO WS-EMP-FLAG
         NOT INVALID KEY
             MOVE 'Y' TO WS-EMP-FLAG
     END-READ.
 3000-MOVE-PARA.                                                       
     MOVE T-NAME TO EMP-NAME.                            
     MOVE T-LOC  TO EMP-LOC.                              
     MOVE T-TECH TO EMP-TECH.                            
     MOVE T-EARN TO EMP-EARN.                            
     MOVE T-DEDN TO EMP-DEDN.                            
     MOVE T-DOB  TO EMP-DOB.                   
*     COMPUTE WS-SAL = T-EARN - T-DEDN      
*     MOVE WS-SAL      TO EMP-SAL.  
 9000-END-PARA.
     DISPLAY '==================================='
     DISPLAY 'VALID EMP IDS   = ', EMP-VALID
     DISPLAY 'INVALID EMP IDS = ', EMP-INVALID
     CLOSE EMPLOYEE-MASTER, TRANSACTION-FILE, REPORT-FILE.

----------------------------------------------------------------------------------

IDENTIFICATION DIVISION.
 PROGRAM-ID. KSDS1.
 ENVIRONMENT DIVISION.
 INPUT-OUTPUT SECTION.
 FILE-CONTROL.
     SELECT EMPLOYEE-MASTER ASSIGN TO 'EMPMAST.DAT'
        ORGANIZATION IS INDEXED
        ACCESS MODE  IS RANDOM
        RECORD KEY   IS EMP-ID
        FILE STATUS  IS WS-EMP-STAT.
     SELECT REPORT-FILE ASSIGN TO 'REPFILE.DAT'
        ORGANIZATION IS SEQUENTIAL
        ACCESS MODE  IS SEQUENTIAL
     SELECT INPUT-FILE ASSIGN TO 'INPUT.DAT'
        ORGANIZATION IS SEQUENTIAL
        ACCESS MODE  IS SEQUENTIAL
        FILE STATUS  IS WS-INP-STAT.
 DATA DIVISION.
 FILE SECTION.
 FD  EMPLOYEE-MASTER
     RECORD CONTAINS 50 CHARACTERS.
 01  MASTER-RECORD.              
     03  EMP-ID       PIC X(05).   
     03  EMP-NAME     PIC X(15).   
     03  EMP-LOC      PIC X(03).   
     03  EMP-DOB      PIC X(08).   
     03  EMP-TECH     PIC X(05).   
     03  EMP-EARN     PIC 9(05)V99.
     03  EMP-DEDN     PIC 9(05)V99.     
*    COPY 'EMPREC.dat'.
 FD  INPUT-FILE     
     RECORD CONTAINS 5 CHARACTERS
     RECORDING MODE IS F.
 01  INPUT-RECORD PIC X(05).
 FD  REPORT-FILE                                 
     RECORD CONTAINS 80 CHARACTERS               
     RECORDING MODE IS F.                        
 01  REPORT-RECORD PIC X(80).
 WORKING-STORAGE SECTION.
 01  WS-VARIABLES.
     03  WS-FILE-FLAG     PIC X(01) VALUE 'N'.
         88  END-OF-FILE            VALUE 'Y'.
     03  WS-EMP-FLAG      PIC X(01) VALUE 'N'.
         88  EMP-FOUND              VALUE 'Y'.
     03  EMP-VALID        PIC 9(02) VALUE ZERO.
     03  EMP-INVALID      PIC 9(02) VALUE ZERO.
     03  TOT-RECS         PIC 9(02) VALUE ZERO.
     03  WS-EMP-STAT      PIC X(02) VALUE SPACES.
     03  WS-INP-STAT      PIC X(02) VALUE SPACES.
 PROCEDURE DIVISION.
 0000-MAIN-PARA.
     PERFORM 1000-INIT-PARA.
     PERFORM 2000-PROCESS-PARA  UNTIL  END-OF-FILE
     PERFORM 9000-END-PARA
     STOP RUN.
 1000-INIT-PARA.
     OPEN INPUT EMPLOYEE-MASTER
     DISPLAY 'EMP OPEN FS ', WS-EMP-STAT
     OPEN INPUT INPUT-FILE.
     DISPLAY 'REP OPEN FS ', WS-INP-STAT
     PERFORM 1500-READ-PARA.
 1500-READ-PARA.
     READ INPUT-FILE
        AT END
           MOVE 'Y' TO WS-FILE-FLAG
        NOT AT END
           ADD 1 TO TOT-RECS
     END-READ.
 2000-PROCESS-PARA.
     PERFORM 2500-READ-MASTER
     IF EMP-FOUND
         DISPLAY 'EMP=> ',  MASTER-RECORD
         ADD 1 TO EMP-VALID 
         WRITE REPORT-RECORD FROM DETAIL-LINE 
     ELSE
         DISPLAY 'INVALID EMPLOYEE ID ', INPUT-RECORD
         ADD 1 TO EMP-INVALID
     END-IF
     PERFORM 1500-READ-PARA.
 2500-READ-MASTER.
     MOVE INPUT-RECORD TO EMP-ID
     READ EMPLOYEE-MASTER
         INVALID KEY
             MOVE 'N' TO WS-EMP-FLAG
         NOT INVALID KEY
             MOVE 'Y' TO WS-EMP-FLAG
     END-READ.
 9000-END-PARA.
     DISPLAY '==================================='
     DISPLAY 'TOTAL RECORDS   = ', TOT-RECS
     DISPLAY 'VALID EMP IDS   = ', EMP-VALID
     DISPLAY 'INVALID EMP IDS = ', EMP-INVALID
     CLOSE EMPLOYEE-MASTER, INPUT-FILE.

----------------------------------------------------------------------------------------

